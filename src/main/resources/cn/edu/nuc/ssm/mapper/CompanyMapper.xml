<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.nuc.ssm.dao.CompanyMapper">
  <resultMap id="BaseResultMap" type="cn.edu.nuc.ssm.entity.Company">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="aid" jdbcType="INTEGER" property="aid" />
    <result column="company_name" jdbcType="VARCHAR" property="companyName" />
    <result column="phone_number" jdbcType="VARCHAR" property="phoneNumber" />
    <result column="corporation" jdbcType="VARCHAR" property="corporation" />
    <result column="property" jdbcType="VARCHAR" property="property" />
    <result column="level" jdbcType="TINYINT" property="level" />
    <result column="createdate" jdbcType="TIMESTAMP" property="createdate" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.edu.nuc.ssm.entity.Company">
    <result column="introduction" jdbcType="LONGVARCHAR" property="introduction" />
  </resultMap>
  <sql id="Base_Column_List">
    id, aid, company_name, phone_number, corporation,  introduction,property, level, createdate
  </sql>
  <sql id="Blob_Column_List">
    introduction
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from company
    where id = #{id,jdbcType=INTEGER}
  </select>
  
   <select id="count"  resultType="java.lang.Integer">
    select 
       count(*)
    from company
      <if test="companyName!= null and companyName!= '' ">
       where  company_name	LIKE CONCAT(CONCAT('%', #{companyName}), '%')
      </if>
  </select>
  
 <select id="selectAll" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    from company
      <if test="companyName!= null and companyName!= '' ">
      where company_name	LIKE CONCAT(CONCAT('%', #{companyName}), '%')
      </if>
    limit #{start},#{offset}
    
   
  </select>
  
  <select id="listAll"  resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    from company
  </select>
   
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from company
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.edu.nuc.ssm.entity.Company">
    insert into company (id, aid, company_name, 
      phone_number, corporation, property, 
      level, createdate, introduction
      )
    values (#{id,jdbcType=INTEGER}, #{aid,jdbcType=INTEGER}, #{companyName,jdbcType=VARCHAR}, 
      #{phoneNumber,jdbcType=VARCHAR}, #{corporation,jdbcType=VARCHAR}, #{property,jdbcType=VARCHAR}, 
      #{level,jdbcType=TINYINT}, #{createdate,jdbcType=TIMESTAMP}, #{introduction,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.nuc.ssm.entity.Company">
    insert into company
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="aid != null">
        aid,
      </if>
      <if test="companyName != null">
        company_name,
      </if>
      <if test="phoneNumber != null">
        phone_number,
      </if>
      <if test="corporation != null">
        corporation,
      </if>
      <if test="property != null">
        property,
      </if>
      <if test="level != null">
        level,
      </if>
      <if test="createdate != null">
        createdate,
      </if>
      <if test="introduction != null">
        introduction,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="aid != null">
        #{aid,jdbcType=INTEGER},
      </if>
      <if test="companyName != null">
        #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="phoneNumber != null">
        #{phoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="corporation != null">
        #{corporation,jdbcType=VARCHAR},
      </if>
      <if test="property != null">
        #{property,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        #{level,jdbcType=TINYINT},
      </if>
      <if test="createdate != null">
        #{createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="introduction != null">
        #{introduction,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.nuc.ssm.entity.Company">
    update company
    <set>
      <if test="aid != null">
        aid = #{aid,jdbcType=INTEGER},
      </if>
      <if test="companyName != null">
        company_name = #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="phoneNumber != null">
        phone_number = #{phoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="corporation != null">
        corporation = #{corporation,jdbcType=VARCHAR},
      </if>
      <if test="property != null">
        property = #{property,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        level = #{level,jdbcType=TINYINT},
      </if>
      <if test="createdate != null">
        createdate = #{createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="introduction != null">
        introduction = #{introduction,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.edu.nuc.ssm.entity.Company">
    update company
    set aid = #{aid,jdbcType=INTEGER},
      company_name = #{companyName,jdbcType=VARCHAR},
      phone_number = #{phoneNumber,jdbcType=VARCHAR},
      corporation = #{corporation,jdbcType=VARCHAR},
      property = #{property,jdbcType=VARCHAR},
      level = #{level,jdbcType=TINYINT},
      createdate = #{createdate,jdbcType=TIMESTAMP},
      introduction = #{introduction,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.nuc.ssm.entity.Company">
    update company
    set aid = #{aid,jdbcType=INTEGER},
      company_name = #{companyName,jdbcType=VARCHAR},
      phone_number = #{phoneNumber,jdbcType=VARCHAR},
      corporation = #{corporation,jdbcType=VARCHAR},
      property = #{property,jdbcType=VARCHAR},
      level = #{level,jdbcType=TINYINT},
      createdate = #{createdate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>